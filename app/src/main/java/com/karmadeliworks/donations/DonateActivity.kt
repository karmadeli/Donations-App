package com.karmadeliworks.donationsimport android.app.Activityimport android.content.Intentimport android.support.v7.app.AppCompatActivityimport android.os.Bundleimport android.widget.Buttonimport android.widget.EditTextimport android.widget.Toastimport com.paypal.android.sdk.payments.*import org.json.JSONExceptionimport org.json.JSONObjectimport java.math.BigDecimalclass DonateActivity : AppCompatActivity(){    var donateBtn: Button? = null    var amountEditText: EditText? = null    val sandbxID: String = "YOUR_SANDBOX"    val liveID: String = "YOUR_LIVE"    var amount: String = ""    var config = PayPalConfiguration().environment(PayPalConfiguration.ENVIRONMENT_SANDBOX)//            .clientId(sandbxID)    override fun onDestroy() {        super.onDestroy()        stopService(Intent(this, PayPalService::class.java))    }    fun processDonation(){        amount = amountEditText!!.text.toString()        //config.acceptCreditCards(true)        config.merchantName("YOUR_NAME")        val payment = PayPalPayment(BigDecimal(amount), "USD", "Donate to: ", PayPalPayment                .PAYMENT_INTENT_SALE)        val intent = Intent(this, PaymentActivity::class.java)        intent.putExtra(PayPalService.EXTRA_PAYPAL_CONFIGURATION, config)        intent.putExtra(PaymentActivity.EXTRA_PAYMENT, payment)        startActivityForResult(intent, Utility.payPalReqCode)    }    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        setContentView(R.layout.activity_donate)        donateBtn = findViewById(R.id.donateBtn)        amountEditText = findViewById(R.id.amount)        donateBtn!!.setOnClickListener {            if(amountEditText!!.text.toString() != "" ){                processDonation()            }        }    }    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {        super.onActivityResult(requestCode, resultCode, data)        if (requestCode == Utility.payPalReqCode){            if (resultCode == Activity.RESULT_OK){                var confirmation: PaymentConfirmation = data!!.getParcelableExtra(PaymentActivity                        .EXTRA_RESULT_CONFIRMATION)                    try{                        val paymentDetails = confirmation.toJSONObject().toString(4)                        println(paymentDetails)                        val result = confirmation.toJSONObject()                        val response = result["response"] as JSONObject                        if(response["state"] == "approved"){                            amountEditText!!.setText("")                            Toast.makeText(this, "$$amount USD donated successfully.", Toast                                    .LENGTH_LONG)                                    .show()                        }else{                            Toast.makeText(this, "Donation failed. Please try again.", Toast                                    .LENGTH_LONG)                                    .show()                        }                    }                    catch(error: JSONException){                        println(error.localizedMessage)                    }            }        }else if(resultCode == PaymentActivity.RESULT_EXTRAS_INVALID){            Toast.makeText(this, "Invalid", Toast.LENGTH_SHORT).show()        }    }}